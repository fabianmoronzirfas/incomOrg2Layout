/*** @@@BUILDINFO@@@ index_allProjects.jsx !Version 1.0! Sat Jan 21 2012 15:07:32 GMT+0100*///index_allProjects.jsx// this script builds an index// Copyright (C) 2012 Fabian "fabiantheblind" Morón Zirfas// http://www.the-moron.net// http://fabiantheblind.info/// info [at] the - moron . net// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see http://www.gnu.org/licenses/#include "db.json"#include "utility.jsx"#include "db_utils.jsx"#include "colors.jsx"#include "document.jsx"#include "styles.jsx"#include "weblinks.jsx"var meta = new Object();	meta.db = data;// this comes from the included db.json	meta.DEBUG = false; // this is for debugging	// this is for quicker editing 	// in the final render switch in the overlay and the image place	meta.flsFolder = null;// the folder for the images	meta.sortedFiles = null;//~	 meta.Masterframe = null;	db_sort_by_starttime();	db_remove_firstelement();// removes old junk	db_build_imageList();     util_getfilesFolder();     meta.sortedFilesbyId = db_files_lists_by_id();// if you want to write your own scripts. copy all above into your new file// than have a look in to the object meta with the function prop() below.// you can now add and remove objects from meta. e.g.    	meta.highlite = build_highliteList();	meta.stats = db_build_TextStats(); // look into db_utils.jsx//~     exit();            meta.fileStats = db_build_file_stats();//~ alert(meta.fileStats[0]);//~ exit();	meta.imgW = 25; // the image sizes	meta.imgH = 25;   //~     just need it for starters//~     after placing all the stuff the doc gets adjusted	meta.pw = 2000; // this will hold the page width	meta.ph = 841; // this will hold the page width	// these are the margins	meta.left = 50;	meta.right = 50;	meta.top = 50;	meta.bottom = 50;        meta.gutter = 23;    // in meta.db.projects you find all the incom projects.// if you want to use your own projects contact memain();function main(){var d = app.documents.add(); // the docdoc_build(d,false); // make some doc stuffcolors_builder(d); // build the colors for the projectsstyles_builder(d);// build the character stylesvar p = d.pages.item(0); // first pagevar y1 = meta.ph/2;// oint to start with the circlesvar x1 = meta.left;       var mastergrp = new Array();// a group that holds all the graphixcs for realigning// loop thr the projectsfor(var i = 0; i < meta.db.projects.length;i++){    var grp = new Array();// a group//~ calc the lower right    var y2 = y1 + meta.imgH;    var x2 = x1 + meta.imgW;          var pr = meta.db.projects[i];// the single project            var oval = p.ovals.add({geometricBounds:[y1,x1,y2,x2]});// this is the big circle        grp.push(oval);// for the group//~         alert(pr.id);        oval.place(meta.flsFolder.fsName + "/" +     pr.id + ".jpg");// place the project image        oval.strokeWeight = 0;// no Stroke        image_tint_and_fit (pr.id, oval);// giv it the right color and fit the image to the circle                oval.label = pr.id;// add the project id to the oval    // loop thru the stats    for(var j in meta.stats){        // if the stats id matches the project id        if(meta.stats[j].id == pr.id){                    var mappedFactor = util_map_value(            meta.stats[j].len,            meta.stats[j].min,            meta.stats[j].max,            0.5,            1.5);//~             alert(mappedFactor);            var vrScaleTM = app.transformationMatrices.add({verticalScaleFactor:mappedFactor});// scale vertical with the factor 0.7 makes it smaller            var hrScaleTM = app.transformationMatrices.add({horizontalScaleFactor:mappedFactor});// scale horizontal with the factor 0.7 makes it smaller            oval.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.LEFT_CENTER_ANCHOR, vrScaleTM);            oval.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.LEFT_CENTER_ANCHOR, hrScaleTM);                        // if there is a workspace to the project            if(pr.workspace != null){                // the coords of the smaller circle                var tx1 =  oval.geometricBounds[1] + ((oval.geometricBounds[3] - oval.geometricBounds[1])) ;                var ty1 = oval.geometricBounds[0] - ((meta.imgH)/2);                var tx2 = tx1 + 5;                var ty2 = ty1 + 5;                var ov2 = p.ovals.add({geometricBounds:[ty1,tx1,ty2,tx2]});                // shift him up                var shift = app.transformationMatrices.add({verticalTranslation:-100});// transform vertical                // and scale                var vrScale = app.transformationMatrices.add({verticalScaleFactor:1.5});// scale vertical with the factor 0.7 makes it smaller                var hrScale = app.transformationMatrices.add({horizontalScaleFactor:1.5});// scale horizontal with the factor 0.7 makes it smaller                    ov2.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.CENTER_ANCHOR, shift);                    ov2.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.CENTER_ANCHOR, vrScale);                    ov2.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.CENTER_ANCHOR, hrScale);                                        grp.push(ov2);// add to group                                        ov2.strokeWeight = 0;// some styling                    ov2.fillColor = d.swatches.item(pr.id+"");// the color for the project                var wsbttn = make_button_with_url(ov2,"http://incom.org/workspace/"+ meta.db.projects[i].workspace.id,pr.id);                grp.push(wsbttn);                // now make a textframe for the workspace title                var tfwy1 = ov2.geometricBounds[0] - 5;                var tfwx1 = ov2.geometricBounds[1] + (ov2.geometricBounds[3] -ov2.geometricBounds[1])/2;                var tfwy2 = ov2.geometricBounds[0] +  5;                var tfwx2 = ov2.geometricBounds[3]+ 150;                var tfw = p.textFrames.add({geometricBounds:[tfwy1,tfwx1,tfwy2,tfwx2]});                    // add the text                    tfw.contents = "workspace: "+pr.workspace.title;                    tfw.paragraphs.everyItem().applyCharacterStyle(d.characterStyles.item("image ul "+ pr.id));                    tfw.fit(FitOptions.FRAME_TO_CONTENT);// fit it                    // rotate it by 45 degrees                var rot = app.transformationMatrices.add({counterclockwiseRotationAngle:45});// transform vertical                    tfw.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.LEFT_CENTER_ANCHOR, rot);                    grp.push(tfw);                }// end of workspace                                    var bttn = make_button_with_url(oval,"http://incom.org/projekt/"+ pr.id,pr.id);            grp.push(bttn);            // if there are both connect them            if(oval != null && ov2 != null){                var gl = connect(oval,ov2,pr.id);                    gl.sendToBack();                    grp.push(gl);                    }                                      } // end if workspace                        }// and of j      var ccls = new Array();  for(var f in meta.sortedFilesbyId){              if(meta.sortedFilesbyId[f].id == pr.id){                ccls = make_circles (oval, pr.id+"", meta.sortedFilesbyId[f].files,pr.id);                }      }//~             for(var c in ccls){grp.push(ccls[c]);}      	var dt = util_iso_to_datim (pr.datetimeStart);	var year = dt.getFullYear();          // now make a textframe that holds the project title        var tfy1 = oval.geometricBounds[0] +( (oval.geometricBounds[2] - oval.geometricBounds[0])/2);        var tfx1 = oval.geometricBounds[1] ;        var tfy2 = tfy1 + 50;        var tfx2 = tfx1 + 150 + meta.imgW/2;                      var oy = p.ovals.add({geometricBounds:[tfy1- 2.5,tfx1 - 10,tfy1 + 2.5,tfx1 -5]});      oy.place(meta.flsFolder.fsName + "/" + year + ".jpg");      oy.fit(FitOptions.FILL_PROPORTIONALLY);// center it      oy.fit(FitOptions.CENTER_CONTENT);// center it      oy.strokeWeight = 0;      grp.push(oy);            var tf = p.textFrames.add({geometricBounds:[tfy1 + 5,tfx1 - 5,tfy2,tfx2]});        tf.contents = pr.title;        tf.paragraphs.everyItem().applyCharacterStyle(d.characterStyles.item("h1 "+ pr.id));        tf.fit(FitOptions.FRAME_TO_CONTENT);           // rotate it by 45 degrees        var rotTM = app.transformationMatrices.add({counterclockwiseRotationAngle: -90 });// rotate (the 180 is for getting the line start upwards)		tf.transform(CoordinateSpaces.pasteboardCoordinates, AnchorPoint.TOP_LEFT_ANCHOR, rotTM);         grp.push(tf);                        // now move the x coordiante        x1 = (oval.geometricBounds[3]) + meta.gutter;//~         x1 = x1 + meta.imgH + meta.gutter;        var groupedItems = p.groups.add(grp);// make a group        groupedItems.label = pr.id +""; // giv it a label        mastergrp.push(groupedItems);// push it to the master group        // garbadge collection        oval = null;        ov2 = null;        tf = null;        tfw = null;        gl = null;        }// end of i        var supergroup = p.groups.add(mastergrp);// another groupvar gb = supergroup.geometricBounds;// the size//  recalc the size of the page    d.documentPreferences.pageHeight = gb[2]-gb[0]+ meta.top + meta.bottom;    meta.ph = d.documentPreferences.pageHeight;// and store it in meta again        d.documentPreferences.pageWidth = groupedItems.geometricBounds[3]+ meta.left + meta.right;    meta.pw = d.documentPreferences.pageWidth;      // now move the group to the center    d.align(supergroup,   DistributeOptions.HORIZONTAL_CENTERS, AlignDistributeBounds.PAGE_BOUNDS);     d.align(supergroup,   DistributeOptions.VERTICAL_CENTERS, AlignDistributeBounds.PAGE_BOUNDS);     var tf = text_build_headline (d, p); // build the headlinereturn 0;}// END MAIN// tint and fit the imagefunction image_tint_and_fit(id,oval){                oval.images.item(0).fillColor = id + "";                oval.fit(FitOptions.FILL_PROPORTIONALLY);// center it                oval.fit(FitOptions.CENTER_CONTENT);// center it} // END TINT// in this case all the projects are in highlite// if not some text is smaller and greyfunction build_highliteList(){    var list = new Array();            list.push({"id":0, "name":"0","col":[255,255,255]});	        for(var i in meta.db.projects){        list.push({"id":meta.db.projects[i].id,"name":meta.db.projects[i].id+"","col":[255,255,255]});                }return list;        }function text_build_headline(doc,page){    doc.paragraphStyles.item("head").pointSize = 13;    doc.paragraphStyles.item("head").justification = Justification.RIGHT_ALIGN;        var x1 = meta.left;    var y1 = meta.ph - (meta.bottom - 5 );    var x2 = meta.pw - meta.right;    var y2 = meta.ph;     var tf = page.textFrames.add({geometricBounds:[y1,x1,y2,x2]});     var dt = new Date();    tf.contents = "6479: Fabian Morón Zirfas\n"+    "build on: " + dt.getFullYear() + "/"+dt.getMonth() + 1 + "/"+dt.getDate() +    "\nIn "+db_get_timespan ()+" days I made " + db_build_stats (doc) +".\n " +    " get the code over there http://fabiantheblind.github.com/incomOrg2Layout/";    tf.paragraphs.everyItem().appliedParagraphStyle = doc.paragraphStyles.item("head");        return tf;    }// connect the circles // found here // http://www.hilfdirselbst.ch/foren/Zwei_Kreise_mit_einer_Linie_orthogonal_verbinden_P486512.htmlfunction connect(c1,c2,id) { 	 	var gb = c1.geometricBounds; 	var r1 = (gb[3]-gb[1])/2; 	var x1 = gb[1]+r1; 	var y1 = gb[0]+r1; 	 	gb = c2.geometricBounds; 	var r2 = (gb[3]-gb[1])/2; 	 	var x2 = gb[1]+r2; 	var y2 = gb[0]+r2;  	var gl = c1.parent.graphicLines.add(); 	gl.paths[0].pathPoints[0].anchor  = [x1,y1]; 	gl.paths[0].pathPoints[1].anchor = [x2,y2]; //~     gl.paths[0].pathPoints[0].leftDirection = [x1- 100,y1]    //~  gl.paths[0].pathPoints[1].leftDirection = [x2 -100,y2];  gl.paths[0].pathPoints[0].rightDirection = [x2 -50,y2];  gl.strokeWeight = 2; gl.strokeColor = gl.parent.parent.swatches.item(id+"");  return gl;}function make_circles(oval,color,list,id){  var circles = new Array();  var ogb = oval.geometricBounds;  var w = 5;  var h = w;  var x = ogb[1];  var y = ogb[2] + w;        for(var c = 0;c < list.length;c++){//~       util_insepct_properties (list[c]);//~       break;      //~       alert();      if(!list[c].filename.match(id+".jpg")){        var x1 = x + w;        var y1 = y + w;      var o = oval.parent.ovals.add({geometricBounds:[y,x,y1,x1]});      try{              o.place(meta.flsFolder.fsName + "/" + util_checkFileType(list[c].filename));//~           image_tint_and_fit (id, o);                                  }catch(e){//~               alert(e);            o.place(meta.flsFolder.fsName + "/" + "error.jpg");               }                try{image_tint_and_fit (id, o);}catch(e){                               o.fillColor = color;          }      o.strokeWeight = 0.5;      o.strokeColor = color;      circles.push(o);      var bttn = make_button_with_url(o,list[c].preview,id);      circles.push(bttn);      x = x + w;      if(x > ogb[3]){          x= ogb[1];          y = y + w;          }      }  }      return circles;    }