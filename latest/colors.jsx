// colors.jsx// Copyright (C) 2012 Fabian "fabiantheblind" Morón Zirfas// http://www.the-moron.net// http://fabiantheblind.info/// info [at] the - moron . net// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see http://www.gnu.org/licenses/	// by dave saundersfunction colors_convertToCMYK(color) {    color.space = ColorSpace.cmyk;var vals = color.colorValue;	for (var j = vals.length - 1; j >= 0; j--) {        vals[j] = Math.round(vals[j]);		}    color.colorValue = vals;}function colors_builder(d){	    // make the black for project 0	for(var i = 0; i < 1; i++){		var theColor = color_add(d,""+ meta.highlite[i].name, ColorModel.PROCESS, meta.highlite[i].col);		colors_convertToCMYK(theColor);//~         alert("once");		}      //~         var c = 0;//~         var m = 0;//~         var y = 0;//~         var k = 0;	for(var j = meta.db.projects.length -1; j >=0 ; j--){                        var topdown = ((100/(meta.db.projects.length -1)) *j);        var downtop =  100 - ((100/(meta.db.projects.length -1)) *j);                if(meta.DEBUG)$.writeln ("td: " + topdown+"  || dt: " + downtop);                 var s = 66;    var l = 55;        var hue = (360/(meta.db.projects.length +1)) *j;//~       switch(j%2){//~             case 0://~             hue = hue + 180;//~             break;//~             case 1://~             hue = hue + 360;//~             break;//~             case 2://~             hue = hue + 90;//~             break;//~             case 3://~             hue = hue + 270;//~             break;//~             }    var rgb = color_hsl2rgb(hue, s, l);    if(meta.DEBUG)alert(hue + " " +rgb.r+" "+rgb.g+ " "+rgb.b);//~ 	var r = 255 - Math.abs(val -j)/amplitude ;//~ 	var g = 255 -((Math.abs(val-j))* (255/ amplitude));//~ 	var b =  255//;j*(255.0/(meta.db.projects.length - 1));    try{		//~         var colCMYK  = color_add(d,""+ meta.db.projects[j].id, ColorModel.PROCESS, [c,m,y,k]);        var colRGB  = color_add(d,""+ meta.db.projects[j].id, ColorModel.PROCESS, [rgb.r,rgb.g,rgb.b]);		   colors_convertToCMYK(colRGB );		}catch(e){            if(meta.DEBUG){				alert(					 // use the error					 // we already made the colors for the projects					 // so if we try to make anther color with the same name we get an error					 meta.db.projects[j].id + " already exists\n" 					 + "its ok i know about it\n" + e);			}		}	}	}// found on http://bit.ly/h5EobK indisnip.wordpress.com ->// how to apply:// add CMYK color//myColorAdd(app.activeDocument, "My Custom Color", ColorModel.PROCESS, [80,50,30,10]);// add RGB color//myColorAdd(app.activeDocument, "My Custom Color", ColorModel.PROCESS, [33,66,99]);// add HEX color//myColorAdd(app.activeDocument, "My Custom Color", ColorModel.PROCESS, "ABCDEF");// add color directly// add CMYK color to document// and asign it to selected object//app.selection[0].fillColor = myColorAdd(app.activeDocument, "My Custom Color", ColorModel.PROCESS, [80,50,30,10]);function color_add(myDocument, myColorName, myColorModel, myColorValue){	if(myColorValue instanceof Array == false){		myColorValue = [(parseInt(myColorValue, 16) >> 16 ) & 0xff, (parseInt(myColorValue, 16) >> 8 ) & 0xff, parseInt(myColorValue, 16 ) & 0xff ];		myColorSpace = ColorSpace.RGB;	}else{		if(myColorValue.length == 3)		  myColorSpace = ColorSpace.RGB;		else		  myColorSpace = ColorSpace.CMYK;	}	try{		myColor = myDocument.colors.item(myColorName);		myName = myColor.name;	}	catch (myError){		myColor = myDocument.colors.add();		myColor.properties = {name:myColorName, model:myColorModel, space:myColorSpace ,colorValue:myColorValue};	}	return myColor;}// color converiosn found here// http://www.codingforums.com/showthread.php?t=11156function color_hsl2rgb(h, s, l) {	var m1, m2, hue;	var r, g, b	s /=100;	l /= 100;	if (s == 0)		r = g = b = (l * 255);	else {		if (l <= 0.5)			m2 = l * (s + 1);		else			m2 = l + s - l * s;		m1 = l * 2 - m2;		hue = h / 360;		r = color_HueToRgb(m1, m2, hue + 1/3);		g = color_HueToRgb(m1, m2, hue);		b = color_HueToRgb(m1, m2, hue - 1/3);	}	return {r: r, g: g, b: b};}function color_HueToRgb(m1, m2, hue) {	var v;	if (hue < 0)		hue += 1;	else if (hue > 1)		hue -= 1;	if (6 * hue < 1)		v = m1 + (m2 - m1) * hue * 6;	else if (2 * hue < 1)		v = m2;	else if (3 * hue < 2)		v = m1 + (m2 - m1) * (2/3 - hue) * 6;	else		v = m1;	return 255 * v;}