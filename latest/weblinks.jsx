// weblinks.jsx// Copyright (C) 2012 Fabian "fabiantheblind" Morón Zirfas// http://www.the-moron.net// http://fabiantheblind.info/// info [at] the - moron . net// This program is free software: you can redistribute it and/or modify// it under the terms of the GNU General Public License as published by// the Free Software Foundation, either version 3 of the License, or// any later version.// This program is distributed in the hope that it will be useful,// but WITHOUT ANY WARRANTY; without even the implied warranty of// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the// GNU General Public License for more details.// You should have received a copy of the GNU General Public License// along with this program.  If not, see http://www.gnu.org/licenses/function make_button(cr,i){    var bttn = cr.parent.buttons.add({geometricBounds:cr.geometricBounds});var behave = bttn.gotoURLBehaviors.add();    behave.enableBehavior = true;    behave.url = meta.sortedFiles[i].preview;    var st1 = bttn.states.add();var st1ro = st1.ovals.add({    geometricBounds:cr.geometricBounds,    strokeWeight:0,    fillColor:cr.parent.parent.swatches.item(meta.sortedFiles[i].id + "")});        var st2 = bttn.states.add();var st2ro = st2.ovals.add({    geometricBounds:cr.geometricBounds,     strokeWeight:0,    strokeColor:cr.parent.parent.swatches.item(meta.sortedFiles[i].id + ""),    fillColor:cr.parent.parent.swatches.item(meta.sortedFiles[i].id + "")    });}function make_button_with_url(cr,url,id){    var bttn = cr.parent.buttons.add({geometricBounds:cr.geometricBounds});var behave = bttn.gotoURLBehaviors.add();    behave.enableBehavior = true;    behave.url = url;    var st1 = bttn.states.add();var st1ro = st1.ovals.add({    geometricBounds:cr.geometricBounds,    strokeWeight:0,    fillColor:cr.parent.parent.swatches.item(id + "")});        var st2 = bttn.states.add();var st2ro = st2.ovals.add({    geometricBounds:cr.geometricBounds,     strokeWeight:0,    strokeColor:cr.parent.parent.swatches.item(id + ""),    fillColor:cr.parent.parent.swatches.item(id + "")    });return bttn;}function find_hyperlinks() {         	with (app.findChangeGrepOptions) { 		includeFootnotes = true;  		includeHiddenLayers = false; 		includeLockedLayersForFind = false; 		includeLockedStoriesForFind = false; 		includeMasterPages = true; 	}  	app.findGrepPreferences = null;  	// URL 	app.findGrepPreferences.findWhat = '\\<(http|www)\\S*\\>'; 	var myURLs = app.activeDocument.findGrep(); 	makeHyperlink('http://', myURLs); 	 //~ 	// email //~ 	app.findGrepPreferences.findWhat = '\\<\\S*@\\S*\\.\\w{2,3}\\>'; // '\\^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2, 4}\\>' //~ 	var myEmails = app.activeDocument.findGrep(); //~ 	util_makeHyperlink('mailto:', myEmails); } // builds hyperlinksfunction makeHyperlink(aPrefix, myArray) { 	for (var i = myArray.length-1; i >= 0; i-- ) { 		try{   			var aString = aPrefix + myArray[i].contents.replace(aPrefix,  '') 			var myHyperlinkTextSource = app.activeDocument.hyperlinkTextSources.add(myArray[i]);    			var myHyperlinkDestination = app.activeDocument.hyperlinkURLDestinations.add({destinationURL:aString}); 			var myHyperlink = app.activeDocument.hyperlinks.add({source:myHyperlinkTextSource,   destination:myHyperlinkDestination});    			//myHyperlink.visible = true;   		}   		catch(e){}  	}  } 