#include "db.json"#include "utility.jsx"#include "db_utils.jsx"#include "colors.jsx"#include "document.jsx"#include "styles.jsx"#include "weblinks.jsx"var meta = new Object();	meta.db = data;// this comes from the included db.json	meta.DEBUG = false; // this is for debugging	// this is for quicker editing 	// in the final render switch in the overlay and the image place	meta.flsFolder = null;// the folder for the images	meta.sortedFiles = null;    meta.addFlsFolder  = null;//~	 meta.Masterframe = null;	db_sort_by_starttime();	db_remove_firstelement();// removes old junk	db_build_imageList();    util_getfilesFolder();//~     getAdditionalFilesFolder();        meta.sortedFilesbyId = db_files_lists_by_id();    meta.highlite = util_build_highliteList();	meta.stats = db_build_TextStats(); // look into db_utils.jsx        meta.imgGutter = 5;    meta.gutter = meta.imgGutter;        meta.left = 12.7;	meta.right = 12.7;	meta.top = 12.7;	meta.bottom = 17;                  // this is DIN A5    meta.pw = 135; // this will hold the page width	meta.ph = 202.5; // this will hold the page width    meta.bookback = 9;         meta.textColumnCount = 8;        meta.imgW = ((meta.pw - (meta.left + meta.right)) - meta.gutter*7) / 8;//25; // the image sizes	meta.imgH = meta.imgW;        main();function main (){        var doc = app.activeDocument;    var page = doc.pages.item(2);    build_index(doc,page);    }function build_index(doc, page){    var list = new Array();        for(var j in meta.db.projects){        var pr = meta.db.projects[j];app.changeTextPreferences = NothingEnum.nothing;  app.findTextPreferences = NothingEnum.nothing;    app.findTextPreferences.appliedCharacterStyle = doc.characterStyles.item("h1 " + meta.db.projects[j].id);    f = doc.findText();    for(var  i = 0; i < f.length;i++) {             list.push( pr.title+ "\u2003id: " + String(pr.id) + "\u2003seite: "+ f[i].parentTextFrames[0].parentPage.name);        }      }//close j//~  reset_activeView (page);      var tfheight = (meta.ph - (meta.bottom + meta.top )) / list.length;        var x1 = meta.pw + meta.left;        var y1 = meta.top;        var x2 = (meta.pw*2) - meta.right;for(var j = 0; j < list.length;j++){            var y2 = y1 + tfheight;        var bnds = [y1,x1,y2,x2];    var frame = page.textFrames.add({geometricBounds:bnds});        frame.contents = list[j];        var ilpar = frame.paragraphs.item(0);                ilpar.hyphenation = false;        ilpar.justification = Justification.LEFT_ALIGN;        ilpar.appliedFont = "DejaVu Serif	Book";    var ptsz = 10;        while(!frame.overflows){                    ilpar.pointSize = ptsz;            ptsz++;            }            while(frame.overflows){             ptsz--;            ilpar.pointSize = ptsz;            }        ilpar.fillTint = 66;//100 - (100/pars.length)*j;        frame.fit(FitOptions.FRAME_TO_CONTENT);                y1 = y1 + tfheight;           }    }